// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type SigningKeyResponsePayload struct {
	ID *string `json:"id,omitempty"`
	// Name of the signing key
	Name *string `json:"name,omitempty"`
	// Timestamp (in milliseconds) at which the signing-key was created
	CreatedAt *float64 `json:"createdAt,omitempty"`
	// Timestamp (in milliseconds) at which the signing-key was last used
	LastSeen  *float64 `json:"lastSeen,omitempty"`
	PublicKey string   `json:"publicKey"`
	// Disable the signing key to allow rotation safely
	Disabled   *bool  `json:"disabled,omitempty"`
	PrivateKey string `json:"privateKey"`
}

func (o *SigningKeyResponsePayload) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SigningKeyResponsePayload) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SigningKeyResponsePayload) GetCreatedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *SigningKeyResponsePayload) GetLastSeen() *float64 {
	if o == nil {
		return nil
	}
	return o.LastSeen
}

func (o *SigningKeyResponsePayload) GetPublicKey() string {
	if o == nil {
		return ""
	}
	return o.PublicKey
}

func (o *SigningKeyResponsePayload) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *SigningKeyResponsePayload) GetPrivateKey() string {
	if o == nil {
		return ""
	}
	return o.PrivateKey
}
