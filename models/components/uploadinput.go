// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"livepeer/internal/utils"
)

// UploadInput - Output of the upload task
type UploadInput struct {
	VideoFilePath        *string                `json:"videoFilePath,omitempty"`
	MetadataFilePath     *string                `json:"metadataFilePath,omitempty"`
	AssetSpec            *AssetInput            `json:"assetSpec,omitempty"`
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
}

func (u UploadInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UploadInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UploadInput) GetVideoFilePath() *string {
	if o == nil {
		return nil
	}
	return o.VideoFilePath
}

func (o *UploadInput) GetMetadataFilePath() *string {
	if o == nil {
		return nil
	}
	return o.MetadataFilePath
}

func (o *UploadInput) GetAssetSpec() *AssetInput {
	if o == nil {
		return nil
	}
	return o.AssetSpec
}

func (o *UploadInput) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}
