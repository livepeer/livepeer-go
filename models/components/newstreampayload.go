// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type NewStreamPayload struct {
	Name      string          `json:"name"`
	CreatorID *InputCreatorID `json:"creatorId,omitempty"`
	// Whether the playback policy for a asset or stream is public or signed
	PlaybackPolicy *PlaybackPolicy `json:"playbackPolicy,omitempty"`
	Profiles       []FfmpegProfile `json:"profiles,omitempty"`
	// Should this stream be recorded? Uses default settings. For more
	// customization, create and configure an object store.
	//
	Record      *bool        `json:"record,omitempty"`
	Multistream *Multistream `json:"multistream,omitempty"`
}

func (o *NewStreamPayload) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *NewStreamPayload) GetCreatorID() *InputCreatorID {
	if o == nil {
		return nil
	}
	return o.CreatorID
}

func (o *NewStreamPayload) GetPlaybackPolicy() *PlaybackPolicy {
	if o == nil {
		return nil
	}
	return o.PlaybackPolicy
}

func (o *NewStreamPayload) GetProfiles() []FfmpegProfile {
	if o == nil {
		return nil
	}
	return o.Profiles
}

func (o *NewStreamPayload) GetRecord() *bool {
	if o == nil {
		return nil
	}
	return o.Record
}

func (o *NewStreamPayload) GetMultistream() *Multistream {
	if o == nil {
		return nil
	}
	return o.Multistream
}
