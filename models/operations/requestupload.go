// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type RequestUploadTask struct {
	ID *string `json:"id,omitempty"`
}

func (o *RequestUploadTask) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

// RequestUploadData - Success
type RequestUploadData struct {
	URL         string            `json:"url"`
	TusEndpoint string            `json:"tusEndpoint"`
	Asset       components.Asset  `json:"asset"`
	Task        RequestUploadTask `json:"task"`
}

func (o *RequestUploadData) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

func (o *RequestUploadData) GetTusEndpoint() string {
	if o == nil {
		return ""
	}
	return o.TusEndpoint
}

func (o *RequestUploadData) GetAsset() components.Asset {
	if o == nil {
		return components.Asset{}
	}
	return o.Asset
}

func (o *RequestUploadData) GetTask() RequestUploadTask {
	if o == nil {
		return RequestUploadTask{}
	}
	return o.Task
}

type RequestUploadResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Data *RequestUploadData
}

func (o *RequestUploadResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RequestUploadResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RequestUploadResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *RequestUploadResponse) GetData() *RequestUploadData {
	if o == nil {
		return nil
	}
	return o.Data
}
