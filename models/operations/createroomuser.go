// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type CreateRoomUserRequest struct {
	// ID of the room
	ID              string                     `pathParam:"style=simple,explode=false,name=id"`
	RoomUserPayload components.RoomUserPayload `request:"mediaType=application/json"`
}

func (o *CreateRoomUserRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateRoomUserRequest) GetRoomUserPayload() components.RoomUserPayload {
	if o == nil {
		return components.RoomUserPayload{}
	}
	return o.RoomUserPayload
}

type CreateRoomUserResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	RoomUserResponse *components.RoomUserResponse
}

func (o *CreateRoomUserResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateRoomUserResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateRoomUserResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateRoomUserResponse) GetRoomUserResponse() *components.RoomUserResponse {
	if o == nil {
		return nil
	}
	return o.RoomUserResponse
}
