// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateSigningKeyRequestBody struct {
	Disabled *bool   `json:"disabled,omitempty"`
	Name     *string `json:"name,omitempty"`
}

func (o *UpdateSigningKeyRequestBody) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *UpdateSigningKeyRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type UpdateSigningKeyRequest struct {
	// ID of the signing key
	KeyID       string                      `pathParam:"style=simple,explode=false,name=keyId"`
	RequestBody UpdateSigningKeyRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateSigningKeyRequest) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

func (o *UpdateSigningKeyRequest) GetRequestBody() UpdateSigningKeyRequestBody {
	if o == nil {
		return UpdateSigningKeyRequestBody{}
	}
	return o.RequestBody
}

type UpdateSigningKeyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateSigningKeyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSigningKeyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSigningKeyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
