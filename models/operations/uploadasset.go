// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/livepeer/livepeer-go/models/components"
	"github.com/livepeer/livepeer-go/models/sdkerrors"
)

type UploadAssetAssetTask struct {
	ID string `json:"id"`
}

func (o *UploadAssetAssetTask) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UploadAssetDataOutput - Upload started
type UploadAssetDataOutput struct {
	Asset components.Asset     `json:"asset"`
	Task  UploadAssetAssetTask `json:"task"`
}

func (o *UploadAssetDataOutput) GetAsset() components.Asset {
	if o == nil {
		return components.Asset{}
	}
	return o.Asset
}

func (o *UploadAssetDataOutput) GetTask() UploadAssetAssetTask {
	if o == nil {
		return UploadAssetAssetTask{}
	}
	return o.Task
}

type UploadAssetTask struct {
	ID string `json:"id"`
}

func (o *UploadAssetTask) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// UploadAssetData - Upload in progress
type UploadAssetData struct {
	Asset components.Asset `json:"asset"`
	Task  UploadAssetTask  `json:"task"`
}

func (o *UploadAssetData) GetAsset() components.Asset {
	if o == nil {
		return components.Asset{}
	}
	return o.Asset
}

func (o *UploadAssetData) GetTask() UploadAssetTask {
	if o == nil {
		return UploadAssetTask{}
	}
	return o.Task
}

type UploadAssetResponse struct {
	HTTPMeta components.HTTPMetadata
	// Upload in progress
	TwoHundredApplicationJSONData *UploadAssetData
	// Upload started
	TwoHundredAndOneApplicationJSONData *UploadAssetDataOutput
	// Error
	Error *sdkerrors.Error
}

func (o *UploadAssetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UploadAssetResponse) GetTwoHundredApplicationJSONData() *UploadAssetData {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONData
}

func (o *UploadAssetResponse) GetTwoHundredAndOneApplicationJSONData() *UploadAssetDataOutput {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONData
}

func (o *UploadAssetResponse) GetError() *sdkerrors.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
