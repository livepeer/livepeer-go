// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type GetRecordedSessionsRequest struct {
	// ID of the parent stream
	ParentID string `pathParam:"style=simple,explode=false,name=parentId"`
	// Flag indicating if the response should only include recorded
	// sessions
	//
	Record *int64 `queryParam:"style=form,explode=true,name=record"`
}

func (o *GetRecordedSessionsRequest) GetParentID() string {
	if o == nil {
		return ""
	}
	return o.ParentID
}

func (o *GetRecordedSessionsRequest) GetRecord() *int64 {
	if o == nil {
		return nil
	}
	return o.Record
}

type GetRecordedSessionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Classes []components.Session
}

func (o *GetRecordedSessionsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetRecordedSessionsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetRecordedSessionsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetRecordedSessionsResponse) GetClasses() []components.Session {
	if o == nil {
		return nil
	}
	return o.Classes
}
