// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/livepeer/livepeer-go/models/components"
	"github.com/livepeer/livepeer-go/models/sdkerrors"
)

type GetRecordedSessionsRequest struct {
	// ID of the parent stream
	ParentID string `pathParam:"style=simple,explode=false,name=parentId"`
	// Flag indicating if the response should only include recorded
	// sessions
	//
	Record *int64 `queryParam:"style=form,explode=true,name=record"`
}

func (o *GetRecordedSessionsRequest) GetParentID() string {
	if o == nil {
		return ""
	}
	return o.ParentID
}

func (o *GetRecordedSessionsRequest) GetRecord() *int64 {
	if o == nil {
		return nil
	}
	return o.Record
}

type GetRecordedSessionsResponse struct {
	HTTPMeta components.HTTPMetadata
	// Success
	Data []components.Session
	// Error
	Error *sdkerrors.Error
}

func (o *GetRecordedSessionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetRecordedSessionsResponse) GetData() []components.Session {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetRecordedSessionsResponse) GetError() *sdkerrors.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
