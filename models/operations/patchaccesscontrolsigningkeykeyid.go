// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/livepeer/livepeer-go/models/components"
	"github.com/livepeer/livepeer-go/models/sdkerrors"
)

type PatchAccessControlSigningKeyKeyIDRequestBody struct {
	Disabled *bool   `json:"disabled,omitempty"`
	Name     *string `json:"name,omitempty"`
}

func (o *PatchAccessControlSigningKeyKeyIDRequestBody) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *PatchAccessControlSigningKeyKeyIDRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type PatchAccessControlSigningKeyKeyIDRequest struct {
	// ID of the signing key
	KeyID       string                                       `pathParam:"style=simple,explode=false,name=keyId"`
	RequestBody PatchAccessControlSigningKeyKeyIDRequestBody `request:"mediaType=application/json"`
}

func (o *PatchAccessControlSigningKeyKeyIDRequest) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

func (o *PatchAccessControlSigningKeyKeyIDRequest) GetRequestBody() PatchAccessControlSigningKeyKeyIDRequestBody {
	if o == nil {
		return PatchAccessControlSigningKeyKeyIDRequestBody{}
	}
	return o.RequestBody
}

type PatchAccessControlSigningKeyKeyIDResponse struct {
	HTTPMeta components.HTTPMetadata
	// Error
	Error *sdkerrors.Error
}

func (o *PatchAccessControlSigningKeyKeyIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *PatchAccessControlSigningKeyKeyIDResponse) GetError() *sdkerrors.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
