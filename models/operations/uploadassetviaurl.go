// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type UploadAssetViaURLTask struct {
	ID *string `json:"id,omitempty"`
}

func (o *UploadAssetViaURLTask) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

// UploadAssetViaURLData - Success
type UploadAssetViaURLData struct {
	Asset components.Asset      `json:"asset"`
	Task  UploadAssetViaURLTask `json:"task"`
}

func (o *UploadAssetViaURLData) GetAsset() components.Asset {
	if o == nil {
		return components.Asset{}
	}
	return o.Asset
}

func (o *UploadAssetViaURLData) GetTask() UploadAssetViaURLTask {
	if o == nil {
		return UploadAssetViaURLTask{}
	}
	return o.Task
}

type UploadAssetViaURLResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Data *UploadAssetViaURLData
}

func (o *UploadAssetViaURLResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UploadAssetViaURLResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UploadAssetViaURLResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UploadAssetViaURLResponse) GetData() *UploadAssetViaURLData {
	if o == nil {
		return nil
	}
	return o.Data
}
