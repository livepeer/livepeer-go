// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type StartRoomEgressRequest struct {
	// ID of the room
	ID                string                       `pathParam:"style=simple,explode=false,name=id"`
	RoomEgressPayload components.RoomEgressPayload `request:"mediaType=application/json"`
}

func (o *StartRoomEgressRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *StartRoomEgressRequest) GetRoomEgressPayload() components.RoomEgressPayload {
	if o == nil {
		return components.RoomEgressPayload{}
	}
	return o.RoomEgressPayload
}

type StartRoomEgressResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *StartRoomEgressResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *StartRoomEgressResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *StartRoomEgressResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
