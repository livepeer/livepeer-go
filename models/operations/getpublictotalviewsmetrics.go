// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetPublicTotalViewsMetricsRequest struct {
	// The playback ID to filter the query results. This can be a canonical
	// playback ID from Livepeer assets or streams, or dStorage identifiers
	// for assets
	//
	PlaybackID string `pathParam:"style=simple,explode=false,name=playbackId"`
}

func (o *GetPublicTotalViewsMetricsRequest) GetPlaybackID() string {
	if o == nil {
		return ""
	}
	return o.PlaybackID
}

// GetPublicTotalViewsMetricsData - A simplified metric object about aggregate viewership of an
// asset. Either playbackId or dStorageUrl will be set.
type GetPublicTotalViewsMetricsData struct {
	// The playback ID associated with the metric
	PlaybackID *string `json:"playbackId,omitempty"`
	// The URL of the distributed storage used for the asset
	DStorageURL *string `json:"dStorageUrl,omitempty"`
	// The number of views for the asset
	ViewCount int64 `json:"viewCount"`
	// The total playtime in minutes for the asset
	PlaytimeMins float64 `json:"playtimeMins"`
}

func (o *GetPublicTotalViewsMetricsData) GetPlaybackID() *string {
	if o == nil {
		return nil
	}
	return o.PlaybackID
}

func (o *GetPublicTotalViewsMetricsData) GetDStorageURL() *string {
	if o == nil {
		return nil
	}
	return o.DStorageURL
}

func (o *GetPublicTotalViewsMetricsData) GetViewCount() int64 {
	if o == nil {
		return 0
	}
	return o.ViewCount
}

func (o *GetPublicTotalViewsMetricsData) GetPlaytimeMins() float64 {
	if o == nil {
		return 0.0
	}
	return o.PlaytimeMins
}

type GetPublicTotalViewsMetricsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A single Metric object with the viewCount and playtimeMins metrics.
	Data *GetPublicTotalViewsMetricsData
}

func (o *GetPublicTotalViewsMetricsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetPublicTotalViewsMetricsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetPublicTotalViewsMetricsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetPublicTotalViewsMetricsResponse) GetData() *GetPublicTotalViewsMetricsData {
	if o == nil {
		return nil
	}
	return o.Data
}
