// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/livepeer/livepeer-go/models/components"
	"github.com/livepeer/livepeer-go/models/sdkerrors"
)

type UpdateMultistreamTargetRequest struct {
	// ID of the multistream target
	ID                            string                                   `pathParam:"style=simple,explode=false,name=id"`
	MultistreamTargetPatchPayload components.MultistreamTargetPatchPayload `request:"mediaType=application/json"`
}

func (o *UpdateMultistreamTargetRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateMultistreamTargetRequest) GetMultistreamTargetPatchPayload() components.MultistreamTargetPatchPayload {
	if o == nil {
		return components.MultistreamTargetPatchPayload{}
	}
	return o.MultistreamTargetPatchPayload
}

type UpdateMultistreamTargetResponse struct {
	HTTPMeta components.HTTPMetadata
	// Error
	Error *sdkerrors.Error
}

func (o *UpdateMultistreamTargetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateMultistreamTargetResponse) GetError() *sdkerrors.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
