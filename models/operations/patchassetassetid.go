// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"livepeer/models/components"
	"net/http"
)

type PatchAssetAssetIDRequest struct {
	// ID of the asset
	AssetID           string                       `pathParam:"style=simple,explode=false,name=assetId"`
	AssetPatchPayload components.AssetPatchPayload `request:"mediaType=application/json"`
}

func (o *PatchAssetAssetIDRequest) GetAssetID() string {
	if o == nil {
		return ""
	}
	return o.AssetID
}

func (o *PatchAssetAssetIDRequest) GetAssetPatchPayload() components.AssetPatchPayload {
	if o == nil {
		return components.AssetPatchPayload{}
	}
	return o.AssetPatchPayload
}

type PatchAssetAssetIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Success
	Asset *components.Asset
}

func (o *PatchAssetAssetIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchAssetAssetIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchAssetAssetIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchAssetAssetIDResponse) GetAsset() *components.Asset {
	if o == nil {
		return nil
	}
	return o.Asset
}
